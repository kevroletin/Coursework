# Часть изложенного ниже должно было быть написано по ходу разработки
# заданий в комментариях. Возможно есть смысл перенести результат этой
# работы в исходники.

# Новые задания.
# Описание каждого задания состоит из раздумий по поводу того, как
# решать задание, из этого следует раздумия по поводу ограничений
# и дестракторов. Далее следует описание алгоритма и показывается
# почему результат удволетворяет ограничениям и создаёт подходящие
# дестракторы

# Модификация существующих заданий.
# Для них даются объяснения изменений.

# Повтор уже имеющихся заданий.
# Часть заданий уже имплементирована, для них даётся объяснения почему
# не появилось новых условий и ограничений. Возможно, не стоит
# добавлять это в отчет

* DONE A1: модификация существующего задания

** Условие

Сколько единиц в двоичной записи числа 1025?
  1) 1
  2) 2
  3) 10
  4) 11

** Анализ решения

Для того, чтобы быстро решить задание нужно заметить, что 1025 =
1024 + 1 = 2^10 + 2^0. Двоичная запись числа 2^n (n - натуральное
число) содержит одну единицу. Тогда 1025 содержит 2 единицы.

** Алгоритм генерации и ограничения

Генератор A3 ones генерирует идентичные задания. Единственное
отличие - ограничения в генераторе. Вместо 2^9 2^10.
   
* DONE A2: новое задание

** Условие

Между населёнными пунктами A, B, C, D, E, F построены дороги,
протяжённость которых приведена в таблице. (Отсутствие числа в таблице
означает, что прямой дороги между пунктами нет.)

|---+---+---+---+---+---+---|
|   | A | B | C | D | E | F |
|---+---+---+---+---+---+---|
| A | ~ | 2 | 4 |   |   |   |
| B | 2 | ~ | 1 |   | 7 |   |
| C | 4 | 1 | ~ | 3 | 4 |   |
| D |   |   | 3 | ~ | 3 |   |
| E |   | 7 | 4 | 3 | ~ | 2 |
| F |   |   |   |   | 2 | ~ |

1) 9
2) 10
3) 11
4) 12

** Анализ решения

Дан ненаправленный взвешенный граф с циклами. Необходима найти
кратчайший маршрут между 2мя вершинами.
На сложность задания влияет количество вершин, длина кратчайшего
маршрута.

** Алгоритм генерации и ограничения

Задание очень похоже на создаваемое генератором A6
bus_station. Используется тот же подход к генерации задания. Код
переписан заново в лучшем виде и подразумевается последующее венесение
общих частей с существующем генератором.
   
1) Генерируется матрица смежности для неориентированного графа без петель (возможно)
   с циклами.

2) Использоуется алгоритмом Флойда-Уоршолла для поиска расстояний между вершинами.
   Причем во время работы алгоритма при улучшшении существующих значений в таблице
   маршрутов запоминаются предыдущие значения(будут использованы в качестве
   деструкторов).

3) Выбираются 2 вершины между которыми существует маршрут с наибольшим числом
   деструкторов. В качестве недостающих вариантов ответов берутся длины маршрутов
   из других вершин в конечную и случайные числа.

* DONE A3: новое задание

** Условие

Дан фрагмент таблицы истинности выражения F:

| X | Y | Z | F |
|---+---+---+---|
| 0 | 0 | 0 | 0 |
| 0 | 0 | 1 | 0 |
| 1 | 1 | 1 | 1 |

Каким выражением может быть F?

1) X /\ Y /\ Z
2) \not X \/ \not Y \/ Z
3) X \/ Y \/
4) \not X /\ \not Y /\ \not Z
  
** Анализ решения
 
Количество переменных: 4. Длина выражения: 3 переменных. Логические
операции: + - \not. Нет скобок. Строк таблицы истиности: 3.

** Алгоритм генерации и ограничения

Реализовано. Среди множества генерируемых заданий встречаются идентичные.
   
* DONE A5: новое задание

** Условие

Автомат получает на вход два трехзначных числа. По этим числам
строится новое число по следующим правилам.
1. Вычисляются три числа – сумма старших разрядов заданных трехзначных
   чисел, сумма средних разрядов этих чисел, сумма
   младших разрядов. 
2. Полученные три числа записываются друг за другом в порядке убывания
   (без разделителей).

Пример. Исходные трехзначные числа:  835, 196. Поразрядные суммы: 9,
12, 11. Результат: 12119

Определите, какое из следующих чисел может быть результатом работы автомата.

1) 151303
2) 161410
3) 191615
4) 121613

** Анализ решения

Необходимо отбросить неверные варианты:
+ 151303 - 03 (лидирующий ноль)
+ 191615 - 19 (максимальная сумма 2х 10тичных цифр 9+9==18)
+ 121613 - Числа не в порядке убывания.
   
Оставшееся число 161410.

** Алгоритм генерации и ограничения

Сгенерировать 3 числа, содержащих одну из перечисленных выше проблем и
одно подходящее число.
   
* DONE A7: новое задание

** Условие
В ячейке B4 электронной таблицы записана формула = \$C3 * 2. Какой вид
приобретет формула, после того как ячейку B4 скопируют в ячейку B6?

Примечание: знак \$ используется для обозначения абсолютной адресации.

1) = $C5 * 4
2) = $C5 * 2
3) = $C3 * 4
4) = $C1 * 2
   
** Анализ решения

Номер ячейки состоит из двух частей: латинские буквы и цифры. Буквами
обозначены столбцы таблицы, цифрами строки. На пересечении строки и
столбца находится ячейка с соответствующим номером. 
Если в ячейке записана формула, содержащая ссылку на другую ячейку, то
при копировании содержимого в другую ячейку ссылка изменяется по
следующему правилу:
- координата ссылки, помеченная знаком \$ остаётся неизменной
- если знака \$ нет, то координата изменяется на столько же, насколько
  изменилась соответствующая координата ячейки, в которой записана формула.

Неправильные ответы в приведённом задании содержат следующие ошибки:
+ Сдвиг в обратную сторону
+ Сдвиг по другой координате
+ Сдвиг по обеим координатам

** Алгоритм генерации и ограничения

1) Выбираются начальные параметры:
   какие координаты зафиксированы; направление сдвига из 8ми возможных
   (4 по горизонтали, 4 по диагонали).

2) Производится сдвиг. Варируя фиксаторы координат получается еще
   несколько неверных значений. Если значений не хватает выбирается
   другое направление сдвига и таким же образом генерируются неверные
   результаты.

* DONE A8: новое задание

** Условие

Производится одноканальная (моно) звукозапись с частотой дискретизации
16 кГц и 24-битным разрешением. Запись длится 1 минуту, ее результаты
записываются в файл, сжатие данных не производится. Какая из
приведенных ниже величин наиболее близка к размеру полученного файла?

1) 0.2 Мбайт
2) 2 Мбайт
3) 3 Мбайт
4) 4 Мбайт

** Анализ решения

Необходимо провести вычисления и в конце округилить результат:
( 24 / 8 ) * 16000 * 60 = 2880000 ~= 2.74 мб. На сложность задания
влияют размер полученного в результате вычислений размера, так же
сложности при округлении могут доставлять дробные части числа, близкие
к 0.5 .

** Алгоритм генерации и ограничения

1) Выбираются начальные величины
   - частота дискретизации
   - разрешение
   - время записи
2) Получить верный отвер, проведя вычисления и округление
3) Сгенерировать дестракторы
   - увеличением(уменьшением) ответа на 1 (в рассчете на ошибку округления)
   - умножением(делением) ответа на 10 (в рассчете на ошибку в размерностях)
   - одновременным применением предыдущихметодов

* DONE A9: новое задание

** Условие

Для кодирования некоторой последовательности, состоящей из букв А, Б,
В, Г и Д, решили использовать неравномерный двоичный код, позволяющий
однозначно декодировать двоичную последовательность, появляющуюся на
приёмной стороне канала связи. Использовали код: А–1, Б–000, В–001, 
Г–011. Укажите, каким кодовым словом может быть закодирована буква Д.
Код должен удовлетворять свойству однозначного декодирования.
   
1) 00
2) 01
3) 11
4) 010

** Анализ решения

Необходимо отбросить неверные варианты, нарушающие однозначность
декодирования:
  1) новый код не должен быть префиксом существующих кодов:
     - 00 - префикс 000
     - 01 - префикс 011
  2) существующие коды не должны быть префиксами нового:
     - 1 - префикс 11

Остаётся 010.
     
** Алгоритм генерации и ограничения

1) Случайным образом строитя двоичное дерево.
2) В процессе обхода дерева в глубину строятся двоичные коды.
3) Выбирается один код для ответа и несколько кодов для условия.
4) В качестве деструкторов берутся либо префиксы кодов из условия, либо
   к кодам из условия добавляются суффиксы.
   
* DONE A10: повтор существующего задания

** Условие

Какое из приведённых имён удовлетворяет логическому условию:
(первая буква согласная → вторая буква согласная) /\ (предпоследняя
буква гласная → последняя буква гласная)?

1) КРИСТИНА
2) МАКСИМ
3) СТЕПАН
4) МАРИЯ
  
** Анализ решения

Для того, чтобы решить задание необходимо проверить истинность каждое
условие из формулы для каждого варианта ответа, подставить значение в
формулу и отбросить варианты ответа, для которых получившиеся
логическое выражение ложно.
   
** Алгоритм генерации и ограничения
   
Уже реализовано.

* DONE А11: модификация существующего задания

** Условие

Для регистрации на сайте некоторой страны пользователю требуется
придумать пароль. Длина пароля – ровно 11 символов. В качестве
символов используются десятичные цифры и 12 различных букв местного
алфавита, причём все буквы используются в двух начертаниях: как
строчные, так и заглавные (регистр буквы имеет значение!).

Под хранение каждого такого пароля на компьютере отводится минимально
возможное и одинаковое целое количество байтов, при этом используется
посимвольное кодирование и все символы кодируются одинаковым и
минимально возможным количеством битов.

Определите объём памяти, который занимает хранение 60 паролей.

1) 540 байт
2) 600 байт
3) 660 байт
4) 720 байт

** Анализ решения

Ход решения.
1) Определить число бит, необходимых для кодирования 1 буквы алфавита.
   Для этого нужно найти число, являющееся степенью 2 не меньшее, чем
   длина алфавита. 
2) Определить количество байт, необходимых для кодирования одного
   пароля.
   Необходимо умножить число бит для хранения 1 символа на длину
   пароля, разделить на 8 с округлением вверх.
3) Определить количество байт для хранения 60 паролей.
   Умножить полученный на предыдущем шаге результат на 60.

Деструкторы:
- в ходе решения можно было не учесть, что буквы используются в 2х
  регистрах
- можно случайно отвести под каждый символ целое число байт
- можно неверно посчитать количество бит, необходимых для хранения
  одного пароля
   
** Алгоритм генерации и ограничения
   
Задание аналогично результатам работы генератора A2
car_numbers. Есть отличия:
+ другая легенда
+ дополнительная сложность - буквы
  алфавита используются в двух начертания: строчные и заглавные.

Для реализации был вынесен общий код из существующего генератора и
использован для создания заданий нового типа.

* DONE А12: новое задание

** Условие

В программе используется одномерный целочисленный массив A с индексами
от 0 до 9. Ниже представлен фрагмент программы, записанный на разных
языках программирования, в котором значения элементов сначала
задаются, а затем меняются. 

Бейсик
#+begin_src 
FOR i=0 TO 9
  A(i) = 9-i
NEXT i
FOR i = 0 TO 4 
  k = A(i)
  A(i) = A(9-i)
  A(9-i) = k
NEXT i
#+end_src

Паскаль
#+begin_src 
for i:=0 to 9 do
  A[i] := 9-i;
for i:=0 to 4 do
begin
  k := A[i];
  A[i] := A[9-i];
  A[9-i] := k;
end;
#+end_src

Си
#+begin_src 
for (i=0;i<=9;i++)
  A[i] = 9-i;
for (i=0;i<=4;i++)
{
  k = A[i];
  A[i] = A[9-i];
  A[9-i] = k;
}
#+end_src

Алгоритмический язык
#+begin_src 
нц для i от 0 до 9
  A[i]:= 9-i
кц
нц для i от 0 до 4
  k := A[i]
  A[i] := A[9-i]
  A[9-i] := k
кц
#+end_src

Чему будут равны элементы этого массива после выполнения фрагмента программы?

** Анализ решения
  
Необходимо понять, что в первом цикле массив A инициализируется
числами от 9 до 0. Во втором цикле элементы массива
переупорядочиваются в обратном порядке.

Параметрами для генератора могут быть:
+ размер массива
+ инициализация массива: цикл вперёд или назад, заполнения от большего
  числа к меньшему или наоборот
+ операции, производимые во 2м цикле, цикл вперёд или назад

Дистракторы:
+ элементы массива в обратном порядке    
+ копирывание элементом (слева направо/справа налево) вместо обмена

** Алгоритм генерации и ограничения
   
1) Ограничение на размерность массива 8 .. 12 = 10(в оригинале условия) +- 2.

2) Для разнообразия в задание добавлено:
   - Инициализация массива целими числами: n-1 .. 0 (а не 0 .. n-1)
   - Обратный порядок присваиваний при перестановке элементов в массиве
    
* DONE B1: новое задание

** Условие

Автоматическое устройство осуществило перекодировку информационного
сообщения на русском языке длиной в 20 символов, первоначально
записанного в 2-байтном коде Unicode, в 8-битную кодировку КОИ-8. На
сколько бит уменьшилась длина сообщения? В ответе запишите только
число.
   
** Анализ решения.

8 бит в 2 раза меньше, чем 2 байта, следовательно каждый символ после
перекодировки занимает на 1 байт меньше места. Значит сообщение стало
занимать на 20 байт меньше, 20 байт это 160 бит.

** Алгоритм генерации и ограничения

Задание похоже на существующее задание А1 recode, где необходимо по
изменению(после перекодировки) размера сообщения в байтах узнать его
длину. Названия и размеры кодировок, использующиеся в генераторах
вынесены в отдельную процедуру.
   
* DONE B2: повтор существующего задания

** Условие
** Анализ решения
** Алгоритм генерации и ограничения

Реализовано.

* DONE B4: новое задание

** Условие

Все 5-буквенные слова, составленные из букв А, О, У, записаны в алфавитном порядке.
Вот начало списка:
1. ААААА
2. ААААО
3. ААААУ
4. АААОА
5. ...

Запишите слово, которое стоит на 240-м месте от начала списка. 
   
** Анализ решения

Необходимо отталкиваясь от последнего элемента списка построить
несколько предыдущих. 240 близко к 243, а 243 - это номер последней
комбинации. Тогде последние элементы следующие:

243. УУУУУ
242. УУУУО
241. УУУУА
240. УУУОУ

Возможные параметры для генератора:
+ Мощность алфавита
+ Длина слова
+ Отступ от последнего слова
     
** Алгоритм генерации и ограничения

1. Генерация задания заключается в выборе предложенных выше параметров и
составлении в соответствии с ними текста.
2. Решение вычисляется по алгоритму изложенному выше при рассмотрения
   решения.

* DONE B5: новое задание

** Условие

Дан фрагмент электронной таблицы:

|   | A          | B      | C      | D     |
|---+------------+--------+--------+-------|
| 1 | 3          |        | 3      | 2     |
| 2 | =(C1+A1)/2 | =C1–D1 | =A1–D1 | =B1/2 |


Какое число  должно быть записано в ячейке B1, чтобы построенная после
выполнения вычислений диаграмма по значениям диапазона ячеек A2:D2
соответствовала рисунку?

*соотношение размеров элементов диаграммы 1:1:1:3*

** Анализ решения

Рассмотрим приведённое выше задания.
Значения всех ячеек второй строки, кроме одной, вычисляются на основе
известных значений, их стоит вычислить в первую очередь. После этого
по диаграмме определяется значение последней ячейки во второй строке.
После этого определяется значение в пустой ячейке.

Возможные параметры генератора:
+ Количество столбцов в таблице
+ Значения в известных ячейках
+ Формулы в ячейках второй строки

** Алгоритм генерации и ограничения

В случае случайной генерации формул необходимо следить за
сложностью получаемого задания, а так же за существованием и
единственностью решения. Это сильно усложняет генерацию,
поэтому в целях упрощения процедуры генерации уравнения записываются в
ручную программистом. Для внесения разнообразия в получаемые варианты
заданий ячейки в 1й и 2й строке случайным образом перемешиваются, в
соответствии с этим меняются координаты в формулах.

* DONE В6: новое задание(не попало в основную ветку)

** Условие

Определите значение переменной c после выполнения следующего фрагмента
программы (записанного ниже на разных языках программирования). 

Бейсик
#+begin_src 
a = 40
b = 80
b = - a - 2 * b
IF a < b THEN 
  c = b - a 
ELSE 
  c = a - 2 * b
END IF
#+end_src

Паскаль
#+begin_src 
a := 40;
b := 80;
b := - a - 2 * b;
if a < b then 
    c := b - a 
else
    c := a - 2 * b;
#+end_src

Си
#+begin_src 
a = 40;
b = 80;
b = - a - 2 * b;
if (a < b)
    c = b – a; 
else
    c = a - 2 * b;
#+end_src

Алгоритмический язык
#+begin_src 
a := 40
b := 80
b := - a - 2 * b
если a < b
    то c := b - a 
    иначе c := a - 2 * b
все
#+end_src
   
** Алгоритм генерации и ограничения
   
1. переменные a, b инициализируются целыми числами
2. одной из переменных a или b присвается значение линейной комбинации
   этих двух переменных
3. переменные a и b сравниваются выбранным случайно оператором сравнения
4. перменной с в 2х ветках оператора if присваиваются значение
   линейной комбинации переменных a, b
   
* DONE B8: новое задание

** Условие

Запись числа 67_10 в системе счисления с основанием N оканчивается на 1
и содержит 4 цифры. Чему равно основание этой системы счисления N?
   
** Анализ решения

Решать перебором, отбросив заведомо неверные варианты ответа.

Возможные праметры генератора:
+ Число
+ Последняя цифра
+ Количество цифр

** Алгоритм генерации и ограничения

1) Вибираются параметры - чило(10 .. 100) и основание системы исчисления (2 .. 9).
2) Перебором проверяется, есть ли другие системы исчисления, в которых результат имеет столько же цифр
   и такую же последнюю цифру. Если другая система счисления есть - параметры генерируются заново.
   
* DONE B11: новое задание

** Условие

В терминологии сетей TCP/IP маской сети  называется двоичное число, определяющее, какая часть IP-адреса узла сети относится к адресу сети, а какая — к адресу самого узла в этой сети. Обычно маска записывается по тем же правилам, что и IP-адрес.  Адрес сети получается в результате применения поразрядной конъюнкции к заданному IP-адресу узла и маске.
По заданным  IP-адресу узла и маске  определите адрес сети.

| IP –адрес узла: | 217.233.232.3 |
| Маска:          | 255.255.252.0 |

При записи ответа выберите из приведенных в таблице чисел четыре
элемента IP-адреса и запишите в нужном порядке соответствующие им
буквы. Точки писать не нужно. 

| A | B |   C |   D |   E |   F |   G |   H |
| 0 | 3 | 217 | 233 | 232 | 244 | 252 | 255 |

Пример. 
Пусть искомый IP-адрес  192.168.128.0, и дана таблица 
|   A |   B |   C | D |   E | F |  G |   H |
| 128 | 168 | 255 | 8 | 127 | 0 | 17 | 192 |
В этом случае правильный ответ будет записан в виде: HBAF

** Анализ решения

Основная сложность задания в выполнении побитовой конъюнкчии чисел 252
и 232. Оба числа не являются степенью 2ки.
   
** Алгоритм генерации и ограничения

1. Генерируются ip-адрес не равный нулю. И маска, содержащая и нули и
   единицы.
2. Вычисляется ответ.
3. Генерируюся деструкторы:
   - применение маски к ip-адресу, используя побитовое "или" вместо
     побитового "и"
   - числа из исходного ip-адреса
   - числа из маски
   
* DONE B12: новое задание
  
** Условие

В языке запросов поискового сервера для обозначения логической
операции «ИЛИ» используется символ «|», а для логическо
й операции «И» – символ «&».
В таблице приведены запросы и количество найденных по ним страниц
некоторого сегмента сети Интернет. 

| Запрос               | Найдено страниц(в тысячах) |
|----------------------+----------------------------|
| Шахматы \vert Теннис |                       7770 |
| Теннис               |                       5500 |
| Шахматы & Теннис     |                       1000 |

Какое количество страниц (в тысячах) будет найдено по запросу 
Шахматы?
Считается, что все запросы выполнялись практически одновременно, так
что набор страниц, содержащих все искомые слова, не изменялся за время
выполнения запросов.

** Анализ решения

Обозначим:
A <- Теннис
B <- Шахматы
A|B <- Шахматы | Теннис 
A&B <- Шахматы & Теннис     
   
Тогда имеет место формула A|B = A + B - A&B. Любое недостающее
значение может быть восстановлено, если известны остальные 3.
   
** Алгоритм генерации и ограничения

1. Генерируются значения A, B, A&B. По формуле приведенной выше
   вычиляется A|B.
2. В тексте задания показываются произвольные 3 значения, 4е
   необходимо найти.
   
* DONE B13: новое задание

** Условие

У исполнителя Кузнечик две команды: 
1. прибавь 3,
2. вычти 2.

Первая из них увеличивает число на экране на 3, вторая – уменьшает его
на 2 (отрицательные числа допускаются).

Программа для Кузнечика – это последовательность команд. Сколько
различных чисел можно получить  из числа 1 с помощью программы,
которая содержит ровно 5 команд?
   
** Анализ решения

Использутеся только сложение и вычитание, следовательно, в силлу
коммутотивности сложения, порядок применения операций не важен. 
Результат зависит только от количества применений 1й или 2й операции.
Если длина программы n, то существует n + 1 вариантов по-разному
применить команды исполнителя.
   
** Алгоритм генерации и ограничения

Случайным образом выбираются длина программы и величины, на которые
исполнитель увеличивает или уменьшает исходное число.
   
* DONE B15: новое задание

** Условие

Сколько существует различных наборов значений логических переменных
x1, x2, ... x9, x10, которые удовлетворяют всем перечисленным ниже
условиям?

#+begin_src 
((x1 ≡ x2) \/ (x3 ≡ x4)) /\ (¬(x1 ≡ x2) \/ ¬(x3 ≡ x4)) = 1
((x3 ≡ x4) \/ (x5 ≡ x6)) /\ (¬(x3 ≡ x4) \/ ¬(x5 ≡ x6)) = 1
((x5 ≡ x6) \/ (x7 ≡ x8)) /\ (¬(x5 ≡ x6) \/ ¬(x7 ≡ x8)) = 1
((x7 ≡ x8) \/ (x9 ≡ x10)) /\ (¬(x7 ≡ x8) \/ ¬(x9 ≡ x10)) = 1
#+end_src

В ответе не нужно перечислять все различные наборы значений x1, x2,
... x9, x10, при которых выполнена данная система равенств. В качестве
ответа вам нужно указать количество таких наборов.

** Анализ решения.

1. Для начала рассмотрим случай 4х переменных:

      ((x1 ≡ x2) \/ (x3 ≡ x4)) /\ (¬(x1 ≡ x2) \/ ¬(x3 ≡ x4)) = 1

   Уравнение выше можно записать так:

      x1 = x2 <=> x3 != x4
      x1 != x2 <=> x3 = x4

   8 наборов переменных удовлетворяют этому уравнению.

2. Теперь переходим к случаю 6ти перменых:
   Для каждого из уже выбранных наборов для случая 4х переменных можем добавить по 2 набора
   из x5, x6

3. Для n = 2*k переменных получаем:

   Всего k-1 пар. Первая пара даёт 8 вариантов, каждая последующая увеличивает число
   вариантов вдвое. Имеем:

      8 * 2 ^ ( k - 2 ) = 2 ^ ( k + 1)
   
** Алгоритм генерации и ограничения

Единственный параметр для генератора: количество переменных. Ответ вычисляется по
формуле, приведённой выше.
