* Слайд 1
Защищается студент 236группы Кевролетин Василий Владимироваич. 
Тема курсовой работы: "Доработка системы генераций тестовых заданий ЕГЭ по информатике".
Руководитель: "Кленин Александр Сергеевич"

* Слайд 2
Начну с определения некоторых терминов:

Единый государственный экзамен – одна из форм государственной итоговой
аттестации выпускников 11-х классов и вступительных испытаний в высшие
и средние специальные учеб
ные заведения. Проводится в форме тестирования.

Вариант заданий - это набор сходных по структуре заданий, направленных
 на проверку одного и того же знания или навыка, отличающихся друг от
 друга формулировкой вопроса,
 или вариантами ответов. 

Генерация задания - создание тестового задания на основе шаблона при
помощи генератора случайных чисел. 


Генератор — процедура на языке программирования, генерирующая схожие
по структуре задания на основе случайных алгоритмов.


* Слайд 3

Для подготовки школьников к сдаче ЕГЭ по информатике требуется большое
количество вариантов заданий. Для удволетворения существующей
потребности в заданиях ЕГЭ по информатике А.С. Клениным была создана
система автоматической генерации тестовых заданий.

В прошлом году в рамках курсовой работы за 3й курс я изучил данную
систему и создал несколько новых генераторов.
Цель моей курсовой работы в этом году: продолжить доработку системы,
дополнив её новыми генераторами.

* Слайд 4

Прежде чем приступить к работе я убедился в том, что система за год не потеряла актуальность. 
Попрежде аналогичной системы автоматической генерации заданий ЕГЭ не существует,
так что я отдельно привожу 2 сравнительные таблицы:
-сравнение источников заданий ЕГЭ по информатике, которая сейчас перед вами.

* Слайд 5
-и сравнение систем автоматической генерации заданий.

Анализ источников заданий ЕГЭ по информатике подтвердил нехватку
тестовых заданий. Анализ автоматических систем генерации тестовых
заданий подтвердил отсутствие аналоги
чных систем автоматизированной генерации тестовых заданий ЕГЭ.
Востребованность системы генерации тестовых заданий ЕГЭ очевидна.

* Слайд 6

Существующая система полностью написана на языке программирования perl
с использованием системы контроля версий git с которыми я хорошо
знаком.

Так что моя работа началась с изучения доступных официальных
источников тестовых заданий ЕГЭ по информатике и выбрать задания,
которые необходимо добавить в систему. После этого, начиная с простых
и заканчивая сложными, добавить генераторы новых тестовых заданий.


* Слайд 7

Систему можно разделить на 3 основные части:
-библиотека генерации заданий, в которую вынесены часто встречающиеся
при генерации алгоритмы и структуры данных

-генераторы заданий: процедуры на языке программирования, которые
генерируют задания определённого типа.

-процедуры вызова генераторов и вывода результатов в формате пригодном
пользователю через интерфейс командной строки. Доступные форматы
вывода даных: html и json.

* Слайд 8

Мною было создано 13 новых и доработаны 2 существующих генераторов заданий. 
Из них в качестве примера я бы хотел рассмотреть подробнее генератор
задания A9.

* Слайд 9

Перед вами результат работы генератора A9. 
<--- краткий рассказ условия --->

* Слайд 10

Первым шагом перед созданием генератора необходимо изучить задание и
выявить возможные способы решения (это позволит выделить в условии
параметры, влияющие на сложность задания и составить дистракторы)

Для того, чтобы решить задание необходимо отбросить варианты,
нарушающие условие однозначности декодирования.

* Слайд 11

Следующим шагом является создание генратора.
В общих чертах алгоритм генерации будет состоять из построения
неравномерного кода, позволяющего декодировать несколько символов и
создания неверных вариантов ответа.

* Слайд 12

Генерация префексных кодов - хорошо известная задача (к примеру,
алгорит Хаффмана для сжатия данных использует префексные коды). Для
генерации префексных кодов можно исполользовать двоичное дерево.

* Слайд 13

<-- рассказ про то как что сделать -->

* Заключительный слайд

Итак, я доработал существующий проект. Разработанные мной генераторы
заданий использовались во время Весеннего турнира юних программистов
для тестирования школьников.

Спасибо за внимание.
